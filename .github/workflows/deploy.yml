name: Deploy to Supabase

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production

env:
  SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
  SUPABASE_PROJECT_ID: ${{ vars.SUPABASE_PROJECT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Verify Supabase CLI installation
        run: |
          supabase --version
          echo "Supabase CLI installed successfully"

      - name: Link Supabase project
        run: |
          echo "Linking to Supabase project ${{ vars.SUPABASE_PROJECT_ID }}..."
          supabase link --project-ref ${{ vars.SUPABASE_PROJECT_ID }}
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}

      - name: Push Supabase config
        run: |
          echo "Pushing Supabase config..."
          supabase config push --project-ref ${{ vars.SUPABASE_PROJECT_ID }}
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

      - name: Run database migrations
        run: |
          echo "Running database migrations..."
          supabase db push --linked
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}

      - name: Set Edge Functions secrets
        run: |
          echo "Setting edge function environment variables..."
          supabase secrets set
          echo "âœ… Edge function environment variables set"
        env:
            SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
            RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
            VAPID_PRIVATE_KEY: ${{ secrets.VAPID_PRIVATE_KEY }}
            VAPID_PUBLIC_KEY: ${{ vars.VAPID_PUBLIC_KEY }}
            VAPID_EMAIL: ${{ vars.VAPID_EMAIL }}
            RESEND_FROM_EMAIL: ${{ vars.RESEND_FROM_EMAIL }}
            APP_URL: ${{ vars.APP_URL }}
            
      - name: Deploy Edge Functions
        run: |
          echo "Deploying edge functions..."
          supabase functions deploy
          echo "âœ… Edge functions deployed"

      - name: Deployment Summary
        if: always()
        run: |
          echo "ðŸš€ Deployment Summary"
          echo "===================="
          echo "Environment: ${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'production' || 'staging') }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
          echo "Project ID: ${{ vars.SUPABASE_PROJECT_ID }}"
          echo ""
          echo "Deployed components:"
          echo "âœ… Database migrations"
          echo "âœ… Edge functions"
          echo "âœ… Environment secrets"
          echo ""
          echo "ðŸŽ‰ Deployment completed!"
