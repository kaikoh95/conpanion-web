-- Migration: Create approval comments table for approval-related discussions
-- Description: This migration creates the approval_comments table to support comments
-- and discussions within the approval workflow

-- Create approval_comments table for approval-related discussions
CREATE TABLE public.approval_comments (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  approval_id BIGINT NOT NULL REFERENCES public.approvals(id) ON DELETE CASCADE,
  user_id UUID NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,
  comment TEXT NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Enable RLS
ALTER TABLE public.approval_comments ENABLE ROW LEVEL SECURITY;

-- Create policies
CREATE POLICY "Users can view comments for approvals they're involved in"
ON public.approval_comments FOR SELECT
USING (
  EXISTS (
    SELECT 1 FROM public.approvals a
    LEFT JOIN public.approval_approvers aa ON a.id = aa.approval_id
    WHERE a.id = approval_id 
    AND (a.requester_id = auth.uid() OR aa.approver_id = auth.uid())
  )
);

CREATE POLICY "Users can insert comments for approvals they're involved in"
ON public.approval_comments FOR INSERT
WITH CHECK (
  user_id = auth.uid() AND
  EXISTS (
    SELECT 1 FROM public.approvals a
    LEFT JOIN public.approval_approvers aa ON a.id = aa.approval_id
    WHERE a.id = approval_id 
    AND (a.requester_id = auth.uid() OR aa.approver_id = auth.uid())
  )
);

-- Grant permissions
GRANT ALL ON public.approval_comments TO authenticated;
GRANT ALL ON public.approval_comments TO service_role;
